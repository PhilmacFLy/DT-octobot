C166 COMPILER V7.05, BALANCE                                                               12/13/2013 18:31:51 PAGE 1   


C166 COMPILER V7.05, COMPILATION OF MODULE BALANCE
OBJECT MODULE PLACED IN .\obj\balance.obj
COMPILER INVOKED BY: C:\Program Files\Keil\C166\BIN\C166.EXE balance.c MODV2 BROWSE MODV2 DEBUG OBJECT(.\obj\balance.obj
                    -) 

 stmt lvl     source

*** WARNING C500 IN LINE 1 OF balance.c: SERIAL NUMBER EXPIRED

    1                 
    2         #include "motor.h"
    3         #include "megatron.h"
    4         #include "sensoric.h"
    5                 
    6         #define C_DIVISOR           (1)
    7         
    8         #define NUM_INTEGRAL_VALUES (10)
    9         
   10         volatile signed int wantedAngle = 0;
   11         
   12         volatile signed int left = 0;
   13         volatile signed int right = 0;
   14         volatile signed long motorvalue = 0;
   15                         
   16         volatile signed long angle;
   17         volatile signed long spin;
   18         
   19         // adjustable here and in debugger
   20         volatile signed int C_PROPORTIONAL = 5;
   21         volatile signed int C_INTEGRAL = 7;
   22         volatile signed int C_DIFFERENTIAL = 1;
   23         
   24         signed int integralvalues[10];
   25         int index = 0;
   26         
   27         static signed int GetIntegralVal()
   28         {
   29  1              signed int r = 0;
   30  1              int i = 0;
   31  1              for (i = 0; i < NUM_INTEGRAL_VALUES; i++) r += integralvalues[i];
   32  1              return (r / NUM_INTEGRAL_VALUES);
   33  1      }
   34         
   35         void BalanceInit()
   36         {
   37  1              int i;
   38  1              for (i = 0; i < NUM_INTEGRAL_VALUES; i++)
   39  1              {
   40  2                      integralvalues[i] = 0;
   41  2              }
   42  1      }
   43         
   44         void Balance()
   45         {
   46  1              angle = GetCurrentAngle();
   47  1              spin = (angle - integralvalues[index]);//ReadSpinValue();
   48  1              if ((angle <= 1 && angle >= 0) || (angle >= -1 && angle <= 0)) angle = 0;
   49  1              //else angle += 3;
   50  1              //if (angle >= -1 && angle <= 0) angle = 0;
   51  1              
   52  1              integralvalues[index] = angle;
*** WARNING C192 IN LINE 52 OF balance.c: '=': value truncated
C166 COMPILER V7.05, BALANCE                                                               12/13/2013 18:31:51 PAGE 2   

   53  1              index = (index + 1) % NUM_INTEGRAL_VALUES;
   54  1      
   55  1              motorvalue = 0;
   56  1              motorvalue += C_PROPORTIONAL * angle;
   57  1              motorvalue += C_DIFFERENTIAL * spin;
   58  1              motorvalue += C_INTEGRAL * GetIntegralVal();
   59  1              if (motorvalue > 255)
   60  1                motorvalue = 255;
   61  1              if (motorvalue < -255)
   62  1                motorvalue = -255;
   63  1      
   64  1              left = motorvalue;
*** WARNING C192 IN LINE 64 OF balance.c: '=': value truncated
   65  1              right = motorvalue;
*** WARNING C192 IN LINE 65 OF balance.c: '=': value truncated
   66  1              SetMotorSpeedsNoReturn(left, right, angle);
   67  1      }


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         388     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =          46     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =          50     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
